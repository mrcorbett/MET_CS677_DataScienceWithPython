{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 33- Pandas DataFrames: GroupBy .. Apply Operations and Functions\n",
    "\n",
    "https://www.youtube.com/watch?v=LVoSlpm7QEY\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Functions covered\n",
    "\n",
    "---\n",
    "\n",
    "list(df['score1'].groupby(df['city']))\n",
    "\n",
    "---\n",
    "\n",
    "df['score1'].groupby(df['city']).describe()\n",
    "\n",
    "---\n",
    "\n",
    "df['score1'].groupby([df['city'], df['rank']]).median()\n",
    "\n",
    "---\n",
    "\n",
    "df.groupby(df['city']).apply(lambda x: np.log2(df['score1']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>attributes</th>\n",
       "      <th>city</th>\n",
       "      <th>rank</th>\n",
       "      <th>score1</th>\n",
       "      <th>score2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>letter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>A</td>\n",
       "      <td>Tripoli</td>\n",
       "      <td>1st</td>\n",
       "      <td>44</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>B</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>2nd</td>\n",
       "      <td>48</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>C</td>\n",
       "      <td>Tripoli</td>\n",
       "      <td>1st</td>\n",
       "      <td>39</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>D</td>\n",
       "      <td>Rome</td>\n",
       "      <td>2nd</td>\n",
       "      <td>41</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>E</td>\n",
       "      <td>Rome</td>\n",
       "      <td>1st</td>\n",
       "      <td>38</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>F</td>\n",
       "      <td>Tripoli</td>\n",
       "      <td>2nd</td>\n",
       "      <td>44</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>G</td>\n",
       "      <td>Rome</td>\n",
       "      <td>1st</td>\n",
       "      <td>34</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>H</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>2nd</td>\n",
       "      <td>54</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>I</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>1st</td>\n",
       "      <td>61</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "attributes     city rank  score1  score2\n",
       "letter                                  \n",
       "A           Tripoli  1st      44      67\n",
       "B            Sydney  2nd      48      63\n",
       "C           Tripoli  1st      39      55\n",
       "D              Rome  2nd      41      70\n",
       "E              Rome  1st      38      64\n",
       "F           Tripoli  2nd      44      77\n",
       "G              Rome  1st      34      45\n",
       "H            Sydney  2nd      54      66\n",
       "I            Sydney  1st      61      72"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.DataFrame({\n",
    "    'letter' :  ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],\n",
    "    \n",
    "    'city' : ['Tripoli', 'Sydney', 'Tripoli', 'Rome', 'Rome', 'Tripoli', 'Rome', 'Sydney', 'Sydney'],\n",
    "    \n",
    "    'rank' : ['1st', '2nd', '1st', '2nd', '1st', '2nd', '1st', '2nd', '1st'],\n",
    "    \n",
    "    'score1' : [44, 48, 39, 41, 38, 44, 34, 54, 61],\n",
    "    \n",
    "    'score2' : [67, 63, 55, 70, 64, 77, 45, 66, 72] })\n",
    "df.set_index('letter', inplace=True)\n",
    "df.columns.name = 'attributes'\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('Rome', letter\n",
       "  D    41\n",
       "  E    38\n",
       "  G    34\n",
       "  Name: score1, dtype: int64), ('Sydney', letter\n",
       "  B    48\n",
       "  H    54\n",
       "  I    61\n",
       "  Name: score1, dtype: int64), ('Tripoli', letter\n",
       "  A    44\n",
       "  C    39\n",
       "  F    44\n",
       "  Name: score1, dtype: int64)]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(df['score1'].groupby(df['city']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Rome</td>\n",
       "      <td>3.0</td>\n",
       "      <td>37.666667</td>\n",
       "      <td>3.511885</td>\n",
       "      <td>34.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>39.5</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sydney</td>\n",
       "      <td>3.0</td>\n",
       "      <td>54.333333</td>\n",
       "      <td>6.506407</td>\n",
       "      <td>48.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>57.5</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Tripoli</td>\n",
       "      <td>3.0</td>\n",
       "      <td>42.333333</td>\n",
       "      <td>2.886751</td>\n",
       "      <td>39.0</td>\n",
       "      <td>41.5</td>\n",
       "      <td>44.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         count       mean       std   min   25%   50%   75%   max\n",
       "city                                                             \n",
       "Rome       3.0  37.666667  3.511885  34.0  36.0  38.0  39.5  41.0\n",
       "Sydney     3.0  54.333333  6.506407  48.0  51.0  54.0  57.5  61.0\n",
       "Tripoli    3.0  42.333333  2.886751  39.0  41.5  44.0  44.0  44.0"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score1'].groupby(df['city']).describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city     rank\n",
       "Rome     1st     36.0\n",
       "         2nd     41.0\n",
       "Sydney   1st     61.0\n",
       "         2nd     51.0\n",
       "Tripoli  1st     41.5\n",
       "         2nd     44.0\n",
       "Name: score1, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score1'].groupby([df['city'], df['rank']]).median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>letter</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>I</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Rome</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.584963</td>\n",
       "      <td>5.285402</td>\n",
       "      <td>5.357552</td>\n",
       "      <td>5.247928</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.087463</td>\n",
       "      <td>5.754888</td>\n",
       "      <td>5.930737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sydney</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.584963</td>\n",
       "      <td>5.285402</td>\n",
       "      <td>5.357552</td>\n",
       "      <td>5.247928</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.087463</td>\n",
       "      <td>5.754888</td>\n",
       "      <td>5.930737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Tripoli</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.584963</td>\n",
       "      <td>5.285402</td>\n",
       "      <td>5.357552</td>\n",
       "      <td>5.247928</td>\n",
       "      <td>5.459432</td>\n",
       "      <td>5.087463</td>\n",
       "      <td>5.754888</td>\n",
       "      <td>5.930737</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "letter          A         B         C         D         E         F         G  \\\n",
       "city                                                                            \n",
       "Rome     5.459432  5.584963  5.285402  5.357552  5.247928  5.459432  5.087463   \n",
       "Sydney   5.459432  5.584963  5.285402  5.357552  5.247928  5.459432  5.087463   \n",
       "Tripoli  5.459432  5.584963  5.285402  5.357552  5.247928  5.459432  5.087463   \n",
       "\n",
       "letter          H         I  \n",
       "city                         \n",
       "Rome     5.754888  5.930737  \n",
       "Sydney   5.754888  5.930737  \n",
       "Tripoli  5.754888  5.930737  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "df.groupby(df['city']).apply(lambda x: np.log2(df['score1']))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
